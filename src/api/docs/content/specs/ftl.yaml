openapi: 3.0.2
components:
  paths:
    client:
      get:
        summary: Get information about requesting client
        tags:
          - "FTL information"
        operationId: "get_client"
        description: |
          The property `timer` may contain additional details concerning a temporary en-/disabling.
          It is `null` when no timer is active (the current status is permanent).
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/client/remote_addr'
                    - $ref: '#/components/schemas/client/http_version'
                    - $ref: '#/components/schemas/client/method'
                    - $ref: '#/components/schemas/client/headers'
    logs:
      dns:
        get:
          summary: Get DNS log content
          tags:
            - "FTL information"
          operationId: "get_dns_log"
          description: |
            This API hook returns content from the log of the embedded DNS resolver `dnsmasq`.

            Every successful request will return a `nextID`.
            This ID can be used on the next request to only get lines which were added *after* the last request.
            This makes periodic polling for new log lines easy as no check for duplicated log lines is necessary.
            The expected behavior for an immediate re-request of a log line with the same ID is an empty response.
            As soon as the next message arrived, this will be included in your request and `nextID` is incremented by one.
          parameters:
            - $ref: '#/components/parameters/logs/dns/nextID'
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    allOf:
                      - $ref: '#/components/schemas/logs/dns/log'
                      - $ref: '#/components/schemas/logs/dns/nextID'
            '401':
              description: Unauthorized
              content:
                application/json:
                  schema:
                    $ref: 'common.yaml#/components/errors/unauthorized'
    sysinfo:
      get:
        summary: Get info about various system parameters
        tags:
          - "FTL information"
        operationId: "get_sysinfo"
        description: |
          This API hook returns a collection of various system infos.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/system'
                    - $ref: '#/components/schemas/ftl'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    dbinfo:
      get:
        summary: Get info about long-term database
        tags:
          - "FTL information"
        operationId: "get_dbinfo"
        description: |
          This API hook returns a collection of various long-term database properties infos.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/database'
    endpoints:
      get:
        summary: Get list of available API endpoints
        tags:
          - "FTL information"
        operationId: "get_endpoints"
        description: |
          This API hook returns the list of all available API endpoints.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/endpoints'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    gateway:
      get:
        summary: Get info about the gateway of your Pi-hole
        tags:
          - "FTL information"
        operationId: "get_gateway"
        description: |
          This API hook returns infos about the gateway of your Pi-hole.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/gateway'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    interfaces:
      get:
        summary: Get info about the interfaces of your Pi-hole
        tags:
          - "FTL information"
        operationId: "get_interfaces"
        description: |
          This API hook returns infos about the networking interfaces of your Pi-hole.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/interfaces'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    config:
      get:
        summary: Get info about the config of your Pi-hole
        tags:
          - "FTL information"
        operationId: "get_config"
        description: |
          This API hook returns infos about the config of your Pi-hole.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/config'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
  schemas:
    client:
      remote_addr:
        type: object
        properties:
          remote_addr:
            type: string
            description: Address of requesting client
            example: "127.0.0.1"
      http_version:
        type: object
        properties:
          http_version:
            type: string
            description: HTTP version of request
            example: "1.1"
      method:
        type: object
        properties:
          method:
            type: string
            description: Request method
            example: "GET"
      headers:
        type: object
        properties:
          headers:
            type: array
            description: Request headers
            items:
              type: object
              properties:
                name:
                  type: string
                  description: Header name
                value:
                  type: string
                  description: Header value
            example:
              - name: "Accept"
                value: "application/json"
              - name: "Connection"
                value: "keep-alive"
              - name: "Pragma"
                value: "no-cache"
    logs:
      dns:
        log:
          type: object
          properties:
            log:
              type: array
              description: Request headers
              items:
                type: object
                properties:
                  timestamp:
                    type: number
                    description: Unix timestamp of log line creation (server time)
                  message:
                    type: string
                    description: Log line content
              example:
                - timestamp: 1611729969.0
                  message: "started, version pi-hole-2.84 cachesize 10000"
                - timestamp: 1611729969.0
                  message: "reading /etc/resolv.conf"
                - timestamp: 1611729969.0
                  message: "read /etc/hosts - 7 addresses"
                - timestamp: 1611729969.0
                  message: "query[A] connectivity-check.ubuntu.com from 127.0.0.1"
        nextID:
          type: object
          properties:
            nextID:
              type: integer
              description: next ID to query if checking for new log lines
              example: 229
    system:
      type: object
      properties:
        system:
          type: object
          properties:
            uptime:
              type: integer
              description: How long the system has been running (seconds)
              example: 67906
            memory:
              type: object
              description: Memory info given in kilobytes
              properties:
                ram:
                  type: object
                  description: RAM memory
                  properties:
                    total:
                      type: integer
                      description: Total RAM
                      example: 10317877
                    free:
                      type: integer
                      description: Total free RAM memory
                      example: 308736
                    used:
                      type: integer
                      description: Used RAM
                      example: 8920416
                    available:
                      type: integer
                      description: Total available RAM memory
                      example: 972304
                swap:
                  type: object
                  description: swap memory
                  properties:
                    total:
                      type: integer
                      description: Total swap
                      example: 10317877
                    used:
                      type: integer
                      description: Used swap
                      example: 8920416
                    free:
                      type: integer
                      description: Total free swap memory
                      example: 308736
            procs:
              type: integer
              description: Number of current processes
              example: 1452
            cpu:
              type: object
              description: CPU info
              properties:
                nprocs:
                  type: integer
                  description: Number of available processors
                  example: 8
                load:
                  type: object
                  description: 1, 5, and 15 minute load averages
                  properties:
                    raw:
                      type: array
                      description: raw values
                      items:
                        type: number
                      example: [0.58837890625, 0.64990234375, 0.66748046875]
                    percent:
                      type: array
                      description: raw values
                      items:
                        type: number
                      example: [4.903157711029053, 5.415853023529053, 5.562337398529053]
            sensors:
              type: array
              description: Sensor information (temperature)
              items:
                type: object
                properties:
                  name:
                    type: string
                    nullable: true
                    description: Description of temperature sensor (if available, `null` otherwise)
                  path:
                    type: string
                    description: Short path of temperature sensor
                  value:
                    type: number
                    description: Sensor value
              example:
                - name: null
                  path: "hwmon0/temp1"
                  value: 30.4
            model:
              type: string
              description: Device model (if available, `null` otherwise)
              example: "Raspberry Pi Model 4B"
            dns:
              $ref: 'dns.yaml#/components/schemas/blocking'
    ftl:
      type: object
      properties:
        ftl:
          type: object
          properties:
            database:
              type: object
              properties:
                gravity:
                  type: integer
                  description: Number of collected exact domains on lists
                  example: 67906
                groups:
                  type: integer
                  description: Number of groups
                  example: 6
                lists:
                  type: integer
                  description: Number of lists
                  example: 1
                clients:
                  type: integer
                  description: Number of configured clients
                  example: 5
                domains:
                  type: object
                  properties:
                    allowed:
                      type: integer
                      description: Number of allowed domains
                      example: 10
                    denied:
                      type: integer
                      description: Number of denied domains
                      example: 3
            privacy_level:
              type: integer
              description: Currently used privacy level
              example: 0
            clients:
              type: object
              properties:
                total:
                  type: integer
                  description: Number of clients FTL has seen in its lfetime
                  example: 10
                active:
                  type: integer
                  description: Number of clients actively using FTL
                  example: 8
    database:
      type: object
      properties:
        size:
          type: integer
          description: Database size in bytes
          example: 3690496
        type:
          type: string
          description: Database file type
          example: "Regular file"
        mode:
          type: string
          description: Database file mode
          example: "rw-r--r--"
        atime:
          type: integer
          description: Timestamp of last access
          example: 1611742120
        mtime:
          type: integer
          description: Timestamp of last modification
          example: 1611742120
        ctime:
          type: integer
          description: Timestamp of last status change
          example: 1611742120
        owner:
          type: object
          properties:
            user:
              type: object
              properties:
                uid:
                  type: integer
                  description: UID of database owner
                  example: 998
                name:
                  type: string
                  description: Name of database owner (user)
                  example: "pihole"
                info:
                  type: string
                  description: User info
                  example: ""
            group:
              type: object
              properties:
                gid:
                  type: integer
                  description: GID of database owner
                  example: 998
                name:
                  type: string
                  description: Name of database owner (group)
                  example: "pihole"
        queries:
          type: integer
          description: Number of queries in long-term database
          example: 536956
        sqlite_version:
          type: string
          description: Version of embedded SQLite3 engine
          example: "3.34.0"
    endpoints:
      type: object
      properties:
        endpoints:
          type: array
          description: Endpoints
          items:
            type: string
          example: ["/api/dns/blocking", "/api/dns/cache", "/api/dns/port", "/api/domains", "/api/groups", "/api/lists"]
    gateway:
      type: object
      properties:
        address:
          type: string
          description: Address of the gateway
          example: "192.168.0.1"
        interface:
          type: string
          description: Interface of your Pi-hole connected to the gateway
          example: "eth0"
    interfaces:
      type: object
      properties:
        interfaces:
          type: array
          description: Interface information
          items:
            type: object
            properties:
              name:
                type: string
                nullable: true
                description: Interface name
              carrier:
                type: boolean
                description: If the interface is connected
              speed:
                type: number
                description: Speed of the interface in Mbit/s (-1 if not applicable)
              tx:
                type: object
                properties:
                  num:
                    type: integer
                    description: Number of transmitted data since boot
                  unit:
                    type: string
                    description: Unit of transmitted data since boot
              rx:
                type: object
                properties:
                  num:
                    type: integer
                    description: Number of received data since boot
                  unit:
                    type: string
                    description: Unit of received data since boot
              ipv4:
                type: array
                nullable: true
                description: Array of associated IPv4 addresses
                items:
                  type: string
              ipv6:
                type: array
                nullable: true
                description: Array of associated IPv6 addresses
                items:
                  type: string
          example:
            - name: "eth0"
              default: true
              carrier: true
              speed: 1000
              tx:
                num: 10.4
                unit: "MB"
              rx:
                num: 8.1
                unit: "MB"
              ipv4: ["192.168.0.123"]
              ipv6: ["fe80::1234:5678:9abc:def0", "2001:db8::1234:5678:9abc:def0"]
            - name: "wlan0"
              default: false
              carrier: false
              speed: -1
              tx:
                num: 0
                unit: "B"
              rx:
                num: 0
                unit: "B"
              ipv4: []
              ipv6: []
            - name: "wg0"
              default: false
              carrier: true
              speed: -1
              tx:
                num: 170.3
                unit: "kB"
              rx:
                num: 222.3
                unit: "kB"
              ipv4: ["10.1.0.1"]
              ipv6: ["fd00:4711::1"]
    config:
      type: object
      properties:
        config:
          type: object
          properties:
            debug:
              type: integer
              example: 0
            dns:
              type: object
              properties:
                CNAMEdeepInspect:
                  type: boolean
                  example: true
                blockESNI:
                  type: boolean
                  example: true
                EDN0ECS:
                  type: boolean
                  example: true
                ignoreLocalhost:
                  type: boolean
                  example: false
                showDNSSEC:
                  type: boolean
                  example: true
                analyzeAAAA:
                  type: boolean
                  example: true
                analyzeOnlyAandAAAA:
                  type: boolean
                  example: false
                piholePTR:
                  type: string
                  example: "PI.HOLE"
                replyWhenBusy:
                  type: string
                  example: "ALLOW"
                blockTTL:
                  type: integer
                  example: 2
                blockingmode:
                  type: string
                  example: "NULL"
                port:
                  type: integer
                  example: 53
                specialDomains:
                  type: object
                  properties:
                    mozillaCanary:
                      type: boolean
                      example: true
                    iCloudPrivateRelay:
                      type: boolean
                      example: true
                reply:
                  type: object
                  properties:
                    host:
                      type: object
                      properties:
                        ipv4:
                          type: string
                          example: null
                        ipv6:
                          type: string
                          example: null
                    blocking:
                      type: object
                      properties:
                        ipv4:
                          type: string
                          example: null
                        ipv6:
                          type: string
                          example: null
                rateLimit:
                  type: object
                  properties:
                    count:
                      type: integer
                      example: 1000
                    interval:
                      type: integer
                      example: 60
            resolver:
              type: object
              properties:
                resolveIPv4:
                  type: boolean
                  example: true
                resolveIPv6:
                  type: boolean
                  example: true
                networkNames:
                  type: boolean
                  example: true
                refreshNames:
                  type: string
                  example: "IPV4_ONLY"
            database:
              type: object
              properties:
                DBimport:
                  type: boolean
                  example: true
                DBexport:
                  type: boolean
                  example: true
                maxHistory:
                  type: integer
                  example: 86400
                maxDBdays:
                  type: integer
                  example: 365
                DBinterval:
                  type: integer
                  example: 60
                network:
                  type: object
                  properties:
                    parseARPcache:
                      type: boolean
                      example: true
                    expire:
                      type: integer
                      example: 365
            http:
              type: object
              properties:
                localAPIauth:
                  type: boolean
                  example: true
                prettyJSON:
                  type: boolean
                  example: false
                sessionTimeout:
                  type: integer
                  example: 300
                domain:
                  type: string
                  example: "pi.hole"
                acl:
                  type: string
                  example: "+0.0.0.0/0"
                  port:
                    type: string
                    example: "8080,[::]:8080"
                paths:
                  type: object
                  properties:
                    webroot:
                      type: string
                      example: "/var/www/html"
                    webhome:
                      type: string
                      example: "/admin/"
            files:
              type: object
              properties:
                log:
                  type: string
                  example: "/var/log/pihole/FTL.log"
                pid:
                  type: string
                  example: "/run/pihole-FTL.pid"
                database:
                  type: string
                  example: "/etc/pihole/pihole-FTL.db"
                gravity:
                  type: string
                  example: "/etc/pihole/gravity.db"
                macvendor:
                  type: string
                  example: "/etc/pihole/macvendor.db"
                setupVars:
                  type: string
                  example: "/etc/pihole/setupVars.conf"
                http_info:
                  type: string
                  example: "/var/log/pihole/HTTP_info.log"
                ph7_error:
                  type: string
                  example: "/var/log/pihole/PH7_error.log"
            misc:
              type: object
              properties:
                nice:
                  type: integer
                  example: -10
                delay_startup:
                  type: integer
                  example: 0
                addr2line:
                  type: boolean
                  example: true
                privacylevel:
                  type: integer
                  example: 0
                check:
                  type: object
                  properties:
                    load:
                      type: boolean
                      example: true
                    shmem:
                      type: integer
                      example: 90
                    disk:
                      type: integer
                      example: 90

  parameters:
    logs:
      dns:
        nextID:
          in: query
          description: (Optional) ID of next line to return
          name: nextID
          schema:
            type: integer
          required: false
          example: 219
