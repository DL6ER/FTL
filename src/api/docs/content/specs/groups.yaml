openapi: 3.0.2
components:
  paths:
    name:
      summary: Modify group
      parameters:
        - $ref: 'groups.yaml#/components/parameters/name'
      get:
        summary: Get groups
        tags:
          - "Group management"
        operationId: "get_groups"
        description: |
          `{name}` is optional. Specifying it will result in only the requested group being returned.

          Valid combinations are:
          - `/api/groups` (all groups)
          - `/api/groups/my_group` (group identical to `my_group`)
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: 'groups.yaml#/components/schemas/groups/get'
                examples:
                  groups:
                    $ref: 'groups.yaml#/components/examples/groups'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
      put:
        summary: Replace group
        tags:
          - "Group management"
        operationId: "replace_group"
        description: |
          Items may be updated by replacing them. `{name}` is required.

          Ensure to send all the required parameters (such as `comment`) to ensure these properties are retained.
          The read-only fields `id` and `date_added` are preserved, `date_modified` is automatically updated on success.
        requestBody:
          description: Callback payload
          content:
            application/json:
              schema:
                $ref: 'groups.yaml#/components/schemas/groups/put'
        responses:
          '201':
            description: Created item
            content:
              application/json:
                schema:
                  $ref: 'groups.yaml#/components/schemas/groups/get' # identical to GET
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/bad_request'
                examples:
                  item_missing:
                    $ref: 'groups.yaml#/components/examples/errors/uri_error/item_missing'
                  no_payload:
                    $ref: 'groups.yaml#/components/examples/errors/bad_request/no_payload'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
      delete:
        summary: Delete group
        tags:
          - "Group management"
        operationId: "delete_group"
        description: |
          *Note:* There will be no content on success.
        responses:
          '204':
            description: Item deleted
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/bad_request'
                examples:
                  item_missing:
                    $ref: 'groups.yaml#/components/examples/errors/uri_error/item_missing'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    direct:
      post:
        summary: Add new group
        tags:
          - "Group management"
        operationId: "add_group"
        description: |
          Creates a new group in the `groups` object. The `{group}` itself is specified in the request body (POST JSON).

          On success, a new ressource is created at `/groups/{name}`.

          The `database_error` with message `UNIQUE contraint failed` error indicates that a group with the same name already exists.
        requestBody:
          description: Callback payload
          content:
            application/json:
                schema:
                  $ref: 'groups.yaml#/components/schemas/groups/post'
        responses:
          '201':
            description: Created item
            content:
              application/json:
                schema:
                  $ref: 'groups.yaml#/components/schemas/groups/get'
            headers:
              Location:
                $ref: 'common.yaml#/components/headers/Location'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/bad_request'
                examples:
                  no_payload:
                    $ref: 'groups.yaml#/components/examples/errors/bad_request/no_payload'
                  duplicate:
                    $ref: 'groups.yaml#/components/examples/errors/database_error/duplicate'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
  schemas:
    groups:
      get:
        type: object
        properties:
          groups:
            type: array
            items:
              allOf:
                - $ref: 'groups.yaml#/components/schemas/name'
                - $ref: 'groups.yaml#/components/schemas/comment'
                - $ref: 'groups.yaml#/components/schemas/enabled'
                - $ref: 'groups.yaml#/components/schemas/readonly'
      put:
        allOf:
          - $ref: 'groups.yaml#/components/schemas/comment'
          - $ref: 'groups.yaml#/components/schemas/enabled'
      post:
        allOf:
          - $ref: 'groups.yaml#/components/schemas/name'
          - $ref: 'groups.yaml#/components/schemas/comment'
          - $ref: 'groups.yaml#/components/schemas/enabled'
    name:
      type: object
      properties:
        name:
          description: Group name
          type: string
          example: test_group
    comment:
      type: object
      properties:
        comment:
          description: User-provided free-text comment for this group
          type: string
          nullable: true
          default: null
          example: Some comment for this group
    enabled:
      type: object
      properties:
        enabled:
          description: Status of item
          type: boolean
          default: true
          example: true
    readonly:
      type: object
      properties:
        id:
          description: Database ID
          type: integer
          readOnly: true
          example: 1
        date_added:
          description: Unix timestamp of item addition
          type: integer
          readOnly: true
          example: 1611239095
        date_modified:
          description: Unix timestamp of last item modification
          type: integer
          readOnly: true
          example: 1611239099
  examples:
    groups:
      value:
        groups:
          - name: "Default"
            comment: "The default group"
            enabled: true
            id: 0
            date_added: 1594670974
            date_modified: 1611157897
          - name: "a"
            comment: null
            enabled: true
            id: 5
            date_added: 1604871899
            date_modified: 1604871899
    errors:
      uri_error:
        item_missing:
          summary: Group to be modified is missing
          value:
            error:
              key: "uri_error"
              message: "Invalid request: Specify item in URI"
              hint: null
      bad_request:
        no_payload:
          summary: No JSON payload found
          value:
            error:
              key: "bad_request"
              message: "Invalid request body data (no valid JSON)"
              hint: null
      database_error:
        duplicate:
          summary: Database error
          value:
            error:
              key: "database_error"
              message: "Could not add to gravity database"
              hint: "UNIQUE constraint failed: grouplist.group"

  parameters:
    name:
      in: path
      name: name
      schema:
        type: string
      required: true
      description: Group name
      example: test_group
