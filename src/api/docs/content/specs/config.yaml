openapi: 3.0.2
components:
  paths:
    config:
      get:
        summary: Get current configuration of your Pi-hole
        tags:
          - "Pi-hole Configuration"
        operationId: "get_config"
        description: |
          This API hook returns infos about the config of your Pi-hole.
        parameters:
          - $ref: 'config.yaml#/components/parameters/detailed'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: 'config.yaml#/components/schemas/config'
                examples:
                  config:
                    $ref: 'config.yaml#/components/examples/config'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
      patch:
        summary: Change configuration of your Pi-hole
        tags:
          - "Pi-hole Configuration"
        operationId: "patch_config"
        description: |
          This API hook allows to modify the config of your Pi-hole. This endpoint supports changing multiple properties at once when you specify several in the payload. See examples below.
        requestBody:
          description: Callback payload
          content:
            application/json:
              schema:
                $ref: 'config.yaml#/components/schemas/config'
              examples:
                config_one:
                  $ref: 'config.yaml#/components/examples/config_one'
                config_two:
                  $ref: 'config.yaml#/components/examples/config_two'
                config:
                  $ref: 'config.yaml#/components/examples/config'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: 'config.yaml#/components/schemas/config'
                examples:
                  config:
                    $ref: 'config.yaml#/components/examples/config'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    config_elem:
      get:
        summary: Get specific part of current configuration of your Pi-hole
        tags:
          - "Pi-hole Configuration"
        operationId: "get_config_elem"
        description: |
          This API hook returns infos about the requested subset of your Pi-hole's configuration.
          The response will be a filtered JSON object and a subset of the full `GET /config` response.
        parameters:
          - $ref: 'config.yaml#/components/parameters/detailed'
          - $ref: 'config.yaml#/components/parameters/element'
        responses:
          '200':
            description: OK
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    config_elem_value:
      put:
        summary: Add config array item
        tags:
          - "Pi-hole Configuration"
        operationId: "add_array_item"
        description: |
          *Note:* There will be no content on success.
        parameters:
          - $ref: 'config.yaml#/components/parameters/element'
          - $ref: 'config.yaml#/components/parameters/value'
        responses:
          '201':
            description: Item created
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/bad_request'
                examples:
                  invalid_path_depth:
                    $ref: 'config.yaml#/components/examples/errors/bad_request/invalid_path_depth'
                  item_not_found:
                    $ref: 'config.yaml#/components/examples/errors/bad_request/item_already_present'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
      delete:
        summary: Delete config array item
        tags:
          - "Pi-hole Configuration"
        operationId: "delete_array_item"
        description: |
          *Note:* There will be no content on success.
        parameters:
          - $ref: 'config.yaml#/components/parameters/element'
          - $ref: 'config.yaml#/components/parameters/value'
        responses:
          '204':
            description: Item deleted
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/bad_request'
                examples:
                  invalid_path_depth:
                    $ref: 'config.yaml#/components/examples/errors/bad_request/invalid_path_depth'
                  item_not_found:
                    $ref: 'config.yaml#/components/examples/errors/bad_request/item_not_found'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    topics:
      get:
        summary: Get configuration topics
        tags:
          - "Pi-hole Configuration"
        operationId: "get_config_topics"
        description: |
          This API hook returns categories that may be used to group configuration options.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: 'config.yaml#/components/schemas/topics'
                examples:
                  topics:
                    $ref: 'config.yaml#/components/examples/topics'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
    server:
      get:
        summary: Get DNS server suggestions
        tags:
          - "Pi-hole Configuration"
        operationId: "get_config_server_suggestions"
        description: |
          This API hook returns a list of DNS servers known to be compatible with Pi-hole.
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: 'config.yaml#/components/schemas/server'
                examples:
                  server:
                    $ref: 'config.yaml#/components/examples/server'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: 'common.yaml#/components/errors/unauthorized'
  schemas:
    config:
      type: object
      properties:
        config:
          type: object
          properties:
            dns:
              type: object
              properties:
                upstreams:
                  type: array
                  items:
                    type: string
                CNAMEdeepInspect:
                  type: boolean
                blockESNI:
                  type: boolean
                EDNS0ECS:
                  type: boolean
                ignoreLocalhost:
                  type: boolean
                showDNSSEC:
                  type: boolean
                analyzeOnlyAandAAAA:
                  type: boolean
                piholePTR:
                  type: string
                replyWhenBusy:
                  type: string
                blockTTL:
                  type: integer
                hosts:
                  type: array
                  items:
                    type: string
                domain:
                  type: string
                domain_needed:
                  type: boolean
                expand_hosts:
                  type: boolean
                bogus_priv:
                  type: boolean
                dnssec:
                  type: boolean
                interface:
                  type: string
                host_record:
                  type: string
                listening_mode:
                  type: string
                cache_size:
                  type: integer
                query_logging:
                  type: boolean
                cnames:
                  type: array
                  items:
                    type: string
                port:
                  type: integer
                rev_server:
                  type: object
                  properties:
                    active:
                      type: boolean
                    cidr:
                      type: string
                    target:
                      type: string
                    domain:
                      type: string
                blocking:
                  type: object
                  properties:
                    active:
                      type: boolean
                    mode:
                      type: string
                specialDomains:
                  type: object
                  properties:
                    mozillaCanary:
                      type: boolean
                    iCloudPrivateRelay:
                      type: boolean
                reply:
                  type: object
                  properties:
                    host:
                      type: object
                      properties:
                        overwrite_v4:
                          type: boolean
                        overwrite_v6:
                          type: boolean
                        IPv4:
                          type: string
                        IPv6:
                          type: string
                    blocking:
                      type: object
                      properties:
                        overwrite_v4:
                          type: boolean
                        overwrite_v6:
                          type: boolean
                        IPv4:
                          type: string
                        IPv6:
                          type: string
                rateLimit:
                  type: object
                  properties:
                    count:
                      type: integer
                    interval:
                      type: integer
            dhcp:
              type: object
              properties:
                active:
                  type: boolean
                start:
                  type: string
                end:
                  type: string
                router:
                  type: string
                leasetime:
                  type: string
                ipv6:
                  type: boolean
                rapid_commit:
                  type: boolean
                hosts:
                  type: array
                  items:
                    type: string
            resolver:
              type: object
              properties:
                resolveIPv4:
                  type: boolean
                resolveIPv6:
                  type: boolean
                networkNames:
                  type: boolean
                refreshNames:
                  type: string
            database:
              type: object
              properties:
                DBimport:
                  type: boolean
                DBexport:
                  type: boolean
                maxHistory:
                  type: integer
                maxDBdays:
                  type: integer
                DBinterval:
                  type: integer
                network:
                  type: object
                  properties:
                    parseARPcache:
                      type: boolean
                    expire:
                      type: integer
            webserver:
              type: object
              properties:
                domain:
                  type: string
                acl:
                  type: string
                port:
                  type: string
                paths:
                  type: object
                  properties:
                    webroot:
                      type: string
                    webhome:
                      type: string
                interface:
                  type: object
                  properties:
                    boxed:
                      type: boolean
                    theme:
                      type: string
                api:
                  type: object
                  properties:
                    localAPIauth:
                      type: boolean
                    prettyJSON:
                      type: boolean
                    sessionTimeout:
                      type: integer
                    pwhash:
                      type: string
                    exclude_clients:
                      type: array
                      items:
                        type: string
                    exclude_domains:
                      type: array
                      items:
                        type: string
                    temp:
                      type: object
                      properties:
                        limit:
                          type: number
                        unit:
                          type: string
            files:
              type: object
              properties:
                pid:
                  type: string
                database:
                  type: string
                gravity:
                  type: string
                macvendor:
                  type: string
                setupVars:
                  type: string
                http_info:
                  type: string
                ph7_error:
                  type: string
                log:
                  type: object
                  properties:
                    ftl:
                      type: string
                    dnsmasq:
                      type: string
            misc:
              type: object
              properties:
                nice:
                  type: integer
                delay_startup:
                  type: integer
                addr2line:
                  type: boolean
                privacylevel:
                  type: integer
                check:
                  type: object
                  properties:
                    load:
                      type: boolean
                    shmem:
                      type: integer
                    disk:
                      type: integer
            debug:
              type: object
              properties:
                database:
                  type: boolean
                networking:
                  type: boolean
                locks:
                  type: boolean
                queries:
                  type: boolean
                flags:
                  type: boolean
                shmem:
                  type: boolean
                gc:
                  type: boolean
                arp:
                  type: boolean
                regex:
                  type: boolean
                api:
                  type: boolean
                overtime:
                  type: boolean
                status:
                  type: boolean
                caps:
                  type: boolean
                dnssec:
                  type: boolean
                vectors:
                  type: boolean
                resolver:
                  type: boolean
                edns0:
                  type: boolean
                clients:
                  type: boolean
                aliasclients:
                  type: boolean
                events:
                  type: boolean
                helper:
                  type: boolean
                config:
                  type: boolean
                inotify:
                  type: boolean
                extra:
                  type: boolean
                reserved:
                  type: boolean
    topics:
      type: object
      properties:
        topics:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the topic
              description:
                type: string
                description: A human-readable description of the topic
    server:
      type: object
      properties:
        server:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Human-readable name of this server
              v4:
                type: array
                description: Array of IPv4 addresses (if any)
                items:
                  type: string
              v6:
                type: array
                description: Array of IPv6 addresses (if any)
                items:
                  type: string

  examples:
    config:
      summary: The entire configuration
      value:
        config:
          dns:
            upstreams: [ "127.0.0.1#5353", "8.8.8.8" ]
            CNAMEdeepInspect: true
            blockESNI: true
            EDNS0ECS: true
            ignoreLocalhost: false
            showDNSSEC: true
            analyzeOnlyAandAAAA: false
            piholePTR: PI.HOLE
            replyWhenBusy: ALLOW
            blockTTL: 2
            hosts:
              - "192.168.2.123 mymusicbox"
            domain: "lan"
            domain_needed: true
            expand_hosts: true
            bogus_priv: true
            dnssec: true
            interface: "eth0"
            host_record: ""
            listening_mode: "local"
            cache_size: 10000
            query_logging: true
            cnames:
              - "*.example.com,default.example.com"
              - "hourly.yetanother.com,yetanother.com,3600"
            port: 53
            rev_server:
              active: false
              cidr: "192.168.0.0/24"
              target: "192.168.0.1"
              domain: "lan"
            blocking:
              active: true
              mode: 'NULL'
            specialDomains:
              mozillaCanary: true
              iCloudPrivateRelay: true
            reply:
              host:
                overwrite_v4: false
                overwrite_v6: false
                IPv4: 0.0.0.0
                IPv6: "::"
              blocking:
                overwrite_v4: false
                overwrite_v6: false
                IPv4: 0.0.0.0
                IPv6: "::"
            rateLimit:
              count: 0
              interval: 0
          dhcp:
            active: false
            start: "192.168.0.10"
            end: "192.168.0.250"
            router: "192.168.0.1"
            leasetime: "24h"
            ipv6: true
            rapid_commit: true
            hosts:
              - "11:22:33:44:55:66,192.168.1.123"
              - "11:22:33:44:55:67,192.168.1.124,hostname"
          resolver:
            resolveIPv4: true
            resolveIPv6: true
            networkNames: true
            refreshNames: IPV4_ONLY
          database:
            DBimport: true
            DBexport: true
            maxHistory: 86400
            maxDBdays: 365
            DBinterval: 60
            network:
              parseARPcache: true
              expire: 365
          webserver:
            domain: pi.hole
            acl: "+0.0.0.0/0,::/0"
            port: 8080,[::]:8080
            paths:
              webroot: "/var/www/html"
              webhome: "/admin/"
            interface:
              boxed: true
              theme: "default-darker"
            api:
              localAPIauth: false
              prettyJSON: false
              sessionTimeout: 300
              pwhash: ''
              exclude_clients: [ '1.2.3.4', 'localhost', 'fe80::345' ]
              exclude_domains: [ 'google.de', 'pi-hole.net' ]
              temp:
                limit: 60.0
                unit: "C"
          files:
            pid: "/run/pihole-FTL.pid"
            database: "/etc/pihole/pihole-FTL.db"
            gravity: "/etc/pihole/gravity.db"
            macvendor: "/etc/pihole/macvendor.db"
            setupVars: "/etc/pihole/setupVars.conf"
            http_info: "/var/log/pihole/HTTP_info.log"
            ph7_error: "/var/log/pihole/PH7.log"
            log:
              ftl: "/var/log/pihole/FTL.log"
              dnsmasq: "/var/log/pihole/pihole.log"
          misc:
            nice: -10
            delay_startup: 10
            addr2line: true
            privacylevel: 0
            check:
              load: true
              shmem: 90
              disk: 90
          debug:
            database: false
            networking: false
            locks: false
            queries: false
            flags: false
            shmem: false
            gc: false
            arp: false
            regex: false
            api: false
            overtime: false
            status: false
            caps: false
            dnssec: false
            vectors: false
            resolver: false
            edns0: false
            clients: false
            aliasclients: false
            events: false
            helper: false
            config: false
            inotify: false
            extra: false
            reserved: false
    config_one:
      summary: One option
      value:
        config:
          dns:
            CNAMEdeepInspect: true
    config_two:
      summary: Two options
      value:
        config:
          dns:
            specialDomains:
              mozillaCanary: true
          misc:
            nice: -10
    topics:
      summary: All topics
      value:
        topics:
          - name: DNS
            description: DNS settings
          - name: dnsmasq
            description: dnsmasq settings
          - name: Resolver
            description: Resolver settings
          - name: Database
            description: Database settings
          - name: API
            description: API settings
          - name: HTTP
            description: HTTP settings
          - name: Files
            description: File locations
          - name: Miscellaneous
            description: Miscellaneous settings
          - name: Debug
            description: Debug settings
    server:
      summary: Several servers being suggested
      value:
        server:
          - name: Google (ECS, DNSSEC)
            v4: ["8.8.8.8", "8.8.4.4"]
            v6: ["2001:4860:4860:0:0:0:0:8888","2001:4860:4860:0:0:0:0:8844"]
          - name: OpenDNS (ECS, DNSSEC)
            v4: ["208.67.222.222", "208.67.220.220"]
            v6: ["2620:119:35::35","2620:119:53::53"]
    errors:
      bad_request:
        invalid_path_depth:
          summary: Invalid path
          value:
            error:
              key: "bad_request"
              message: "Invalid path depth"
              hint: "Use, e.g., DELETE /config/dnsmasq/upstreams/127.0.0.1 to remove \"127.0.0.1\" from config.dns.upstreams"
        item_not_found:
          summary: Item to be deleted does not exist
          value:
            error:
              key: "bad_request"
              message: "Item not found"
              hint: "Can only delete existing items"
        item_already_present:
          summary: Item to be added exists already
          value:
            error:
              key: "bad_request"
              message: "Item already present"
              hint: "Uniqueness of items is enforced"
  parameters:
    detailed:
      name: detailed
      in: query
      description: Return detailed information about the configuration
      required: false
      schema:
        type: boolean
        default: false
        example: false
    element:
      in: path
      name: element
      schema:
        type: string
      required: true
      description: config element
      example: "dnsmasq/upstreams"
    value:
      in: path
      name: value
      schema:
        type: string
      required: true
      description: config value
      example: "8.8.8.8"
